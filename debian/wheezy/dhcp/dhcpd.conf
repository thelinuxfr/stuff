###
# Configuration file for ISC dhcpd for Debian
# Log : /var/lib/dhcp/dhcpd.leases
###

## The ddns-updates-style parameter controls whether or not the server will
## attempt to do a DNS update when a lease is confirmed. We default to the
## behavior of the version 2 packages ('none', since DHCP v2 didn't
## have support for DDNS.)
ddns-update-style none;

## Divers renseignements sont disponible pour param√©trer les clients.
## voir man dhcp-options pour la liste
# option definitions common to all supported networks...
# option domain-name "technimac.eu";
# option domain-name-servers 192.168.5.200, 192.168.5.6;
# option ntp-servers 192.168.5.1;
###
# option netbios-name-servers 192.168.1.1;
# option lpr-servers 192.168.0.7;
# option smtp-server 192.168.1.3;
# option pop-server 192.168.1.3;
###

default-lease-time 600;
max-lease-time 7200;

## Nom du serveur DHCP
# server-name "dns.ubuntu-fr.lan";

## If this DHCP server is the official DHCP server for the local
## network, the authoritative directive should be uncommented.
authoritative;

## Use this to send dhcp log messages to a different log file (you also
## have to hack syslog.conf to complete the redirection).
log-facility local7;

## refus(deny)/autorise(allow) les clients inconnus (refuse client inconnu)
# deny unknown-clients;

## No service will be given on this subnet, but declaring it helps the 
## DHCP server to understand the network topology.

subnet 192.168.5.0 netmask 255.255.255.0 {
  range 192.168.5.10 192.168.5.199;
  option routers 192.168.5.1;
  option broadcast-address 192.168.5.254;
  option subnet-mask 255.255.255.0;
  option domain-name-servers 192.168.5.200, 192.168.5.6;
  option domain-name "technimac.eu";
  option ntp-servers 192.168.5.1;
# option netbios-name-servers 192.168.1.1;
}

## This declaration allows BOOTP clients to get dynamic addresses,
## which we don't really recommend.
#subnet 10.254.239.32 netmask 255.255.255.224 {
#  range dynamic-bootp 10.254.239.40 10.254.239.60;
#  option broadcast-address 10.254.239.31;
#  option routers rtr-239-32-1.example.org;
#}

## A slightly different configuration for an internal subnet.
#subnet 192.168.5.0 netmask 255.255.255.0 {
#  range 192.168.5.10 192.168.5.50;
#  option domain-name-servers ns1.internal.example.org;
#  option domain-name "internal.example.org";
#  option routers 10.5.5.1;
#  option broadcast-address 10.5.5.31;
#  default-lease-time 600;
#  max-lease-time 7200;
#  option ntp-servers 192.168.1.254;
#  option netbios-name-servers 192.168.1.1;
#}

## Hosts which require special configuration options can be listed in
## host statements.   If no address is specified, the address will be
## allocated dynamically (if possible), but the host-specific information
## will still come from the host declaration.
#host passacaglia {
#  hardware ethernet 0:0:c0:5d:bd:95;
#  filename "vmunix.passacaglia";
#  server-name "toccata.fugue.com";
#}

## Fixed IP addresses can also be specified for hosts.   These addresses
## should not also be listed as being available for dynamic assignment.
## Hosts for which fixed IP addresses have been specified can boot using
## BOOTP or DHCP.   Hosts for which no fixed address is specified can only
## be booted with DHCP, unless there is an address range on the subnet
## to which a BOOTP client is connected which has the dynamic-bootp flag
## set.
#host fantasia {
#  hardware ethernet 08:00:07:26:c0:a5;
#  fixed-address fantasia.fugue.com;
#}

## You can declare a class of clients and then do address allocation
## based on that.   The example below shows a case where all clients
## in a certain class get addresses on the 10.17.224/24 subnet, and all
## other clients get addresses on the 10.0.29/24 subnet.

#class "foo" {
#  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
#}

#shared-network 224-29 {
#  subnet 10.17.224.0 netmask 255.255.255.0 {
#    option routers rtr-224.example.org;
#  }
#  subnet 10.0.29.0 netmask 255.255.255.0 {
#    option routers rtr-29.example.org;
#  }
#  pool {
#    allow members of "foo";
#    range 10.17.224.10 10.17.224.250;
#  }
#  pool {
#    deny members of "foo";
#    range 10.0.29.10 10.0.29.230;
#  }
#}

