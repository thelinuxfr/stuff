Index: wicd/gui.py
===================================================================
--- wicd/gui.py	(revision 573)
+++ wicd/gui.py	(working copy)
@@ -81,6 +81,7 @@
 ' must create a network profile. To create a network profile, type a name that'
 ' describes this network, and press Add.')
 language['automatic_connect'] = _('Automatically connect to this network')
+language['never_connect'] = _('Never connect to this network')
 language['secured'] = _('Secured')
 language['unsecured'] = _('Unsecured')
 language['channel'] = _('Channel')
@@ -942,6 +943,7 @@
         self.lbl_mode = GreyLabel()
         self.hbox_status = gtk.HBox(False, 5)
         self.chkbox_autoconnect = gtk.CheckButton(language['automatic_connect'])
+        self.chkbox_neverconnect = gtk.CheckButton(language['never_connect'])
 
         # Set the values of the network info labels.
         self.set_signal_strength(wireless.GetWirelessProperty(networkID, 
@@ -974,6 +976,7 @@
         # Add the wireless network specific parts to the NetworkEntry
         # VBox objects.
         self.vbox_top.pack_start(self.chkbox_autoconnect, False, False)
+        self.vbox_top.pack_start(self.chkbox_neverconnect, False, False)
         self.vbox_top.pack_start(self.hbox_status, True, True)
 
         if stringToBoolean(self.format_entry(networkID, "automatic")):
@@ -981,8 +984,16 @@
         else:
             self.chkbox_autoconnect.set_active(False)
 
+        if stringToBoolean(self.format_entry(networkID, "never")):
+            self.chkbox_autoconnect.set_sensitive(False)
+            self.connect_button.set_sensitive(False)
+            self.chkbox_neverconnect.set_active(True)
+        else:
+            self.chkbox_neverconnect.set_active(False)
+
         # Connect signals.
         self.chkbox_autoconnect.connect("toggled", self.update_autoconnect)
+        self.chkbox_neverconnect.connect("toggled", self.update_neverconnect)
         self.script_button.connect("button-press-event", self.edit_scripts)       
 
         # Show everything
@@ -1047,6 +1058,8 @@
 
     def update_connect_button(self, state, apbssid):
         """ Update the connection/disconnect button for this entry. """
+        if stringToBoolean(self.format_entry(self.networkID, "never")):
+            self.connect_button.set_sensitive(False)
         if not apbssid:
             apbssid = wireless.GetApBssid()
         if state == misc.WIRELESS and \
@@ -1105,7 +1118,20 @@
                                                   get_active()))
         config.SaveWirelessNetworkProperty(self.networkID, "automatic")
 
+    def update_neverconnect(self, widget=None):
+        """ Called when the neverconnect checkbox is toggled. """
+        wireless.SetWirelessProperty(self.networkID, "never",
+                                     noneToString(self.chkbox_neverconnect.
+                                                  get_active()))
+        config.SaveWirelessNetworkProperty(self.networkID, "never")
+        if self.chkbox_neverconnect.get_active():
+            self.chkbox_autoconnect.set_sensitive(False)
+            self.connect_button.set_sensitive(False)
+        else:
+            self.chkbox_autoconnect.set_sensitive(True)
+            self.connect_button.set_sensitive(True)
 
+
 class WiredProfileChooser:
     """ Class for displaying the wired profile chooser. """
     def __init__(self):
@@ -1836,6 +1862,8 @@
 
         entry.set_net_prop("automatic",
                            noneToString(netent.chkbox_autoconnect.get_active()))
+        entry.set_net_prop("never",
+                           noneToString(netent.chkbox_neverconnect.get_active()))
         # Save IP info
         if entry.chkbox_static_ip.get_active():
             entry.set_net_prop("ip", noneToString(entry.txt_ip.get_text()))
Index: wicd/wicd-daemon.py
===================================================================
--- wicd/wicd-daemon.py	(revision 573)
+++ wicd/wicd-daemon.py	(working copy)
@@ -427,6 +427,8 @@
             if bool(network["has_profile"]):
                 if self.debug_mode:
                     print network["essid"] + ' has profile'
+                if bool(network.get('never')):
+		    continue
                 if bool(network.get('automatic')):
                     print 'trying to automatically connect to...' + \
                           network["essid"]
